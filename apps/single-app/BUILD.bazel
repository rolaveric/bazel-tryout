package(default_visibility = ["//visibility:public"])

load("@angular//:index.bzl", "ng_module")
load("@build_bazel_rules_typescript//:defs.bzl", "ts_library", "ts_web_test_suite")
load("@build_bazel_rules_nodejs//:defs.bzl", "history_server", "rollup_bundle")
load("@build_bazel_rules_nodejs//internal/web_package:web_package.bzl", "web_package")
load("@build_bazel_rules_typescript//:defs.bzl", "ts_devserver")

ng_module(
    name = "single-app",
    srcs = glob(
        include = ["**/*.ts"],
        exclude = [
            "**/*.spec.ts",
            "src/main.ts",
            "src/test.ts",
            "src/initialize_testbed.ts",
        ],
    ),
    assets = glob([
        "**/*.css",
        "**/*.html",
    ]),
    deps = [
        "@angular//packages/core",
        "@angular//packages/platform-browser",
        "@angular//packages/router",
        "@npm//@types",
    ],
)

rollup_bundle(
    name = "bundle",
    entry_point = "apps/single-app/src/main.prod",
    deps = ["//apps/single-app"],
)

web_package(
    name = "prodapp",
    assets = [
        # do not sort
        "@npm//node_modules/zone.js:dist/zone.min.js",
        ":bundle.min.js",
    ],
    data = [
        ":bundle",
    ],
    index_html = "src/index.html",
)

history_server(
    name = "prodserver",
    data = [":prodapp"],
    templated_args = ["apps/single-app/prodapp"],
)

ts_devserver(
    name = "devserver",
    additional_root_paths = [
        "npm/node_modules/zone.js/dist",
        "npm/node_modules/tslib",
        "bazel_tryout/apps/single-app/src",
    ],
    entry_module = "bazel_tryout/apps/single-app/src/main.dev",
    index_html = "src/index.html",
    port = 4200,
    serving_path = "/bundle.min.js",
    static_files = [
        "@npm//node_modules/zone.js:dist/zone.min.js",
        "@npm//node_modules/tslib:tslib.js",
        "src/favicon.ico",
    ],
    deps = [":single-app"],
)

ts_library(
    name = "test_lib",
    testonly = 1,
    srcs = glob(["**/*.spec.ts"]),
    deps = [
        ":single-app",
        "@angular//packages/core/testing",
        "@angular//packages/router/testing",
        "@npm//@types",
    ],
)

ts_library(
    name = "initialize_testbed",
    testonly = 1,
    srcs = [
        "src/initialize_testbed.ts",
    ],
    deps = [
        "@angular//packages/core/testing",
        "@angular//packages/platform-browser-dynamic/testing",
        "@npm//@types",
    ],
)

ts_web_test_suite(
    name = "test",
    srcs = ["@npm//node_modules/tslib:tslib.js"],
    # do not sort
    bootstrap = [
        "@npm//node_modules/zone.js:dist/zone-testing-bundle.js",
        "@npm//node_modules/reflect-metadata:Reflect.js",
    ],
    browsers = [
        "@io_bazel_rules_webtesting//browsers:chromium-local",
    ],
    runtime_deps = [
        ":initialize_testbed",
    ],
    deps = [
        ":test_lib",
        "@npm//karma-jasmine",
    ],
)
